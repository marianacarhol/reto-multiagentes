# ===================================
# Environment Configuration for MyTool
# ===================================
# 
# Copy this file to .env and update the values according to your setup.
# Never commit .env files to version control as they may contain sensitive data.
#
# Generated on 2025-09-03 using create-ai-spine-tool v1.0.0
# Language: TypeScript
# ===================================

# ===================================
# Server Configuration
# ===================================

# Port where the tool server will listen
PORT=3000

# Host address for the server (use 0.0.0.0 for all interfaces)
HOST=0.0.0.0

# Default service access window
ACCESSWINDOWSTART=06:00
ACCESSWINDOWEND=23:59

# Environment (development, staging, production)
NODE_ENV=development

# ===================================
# Logging and Debugging
# ===================================

# Log level (error, warn, info, debug)
LOG_LEVEL=info

# Enable verbose logging for AI Spine operations
AI_SPINE_VERBOSE=true

# Enable request logging in development
REQUEST_LOGGING=true

# ===================================
# Security Configuration
# ===================================

# Enable API key authentication (true/false)
API_KEY_AUTH=false

# Comma-separated list of valid API keys (only if API_KEY_AUTH=true)
VALID_API_KEYS=your-api-key-1,your-api-key-2

# CORS origin (use * for all origins in development, specific URLs in production)
CORS_ORIGIN=*

# ===================================
# Tool-Specific Configuration
# ===================================

# Default count for repeated transformations or items
DEFAULT_COUNT=1

# Maximum allowed message length
MAX_MESSAGE_LENGTH=1000

# ===================================
# Database Configuration
# ===================================

# PostgreSQL connection string
# Example: postgresql://user:password@localhost:5432/database
SUPABASE_URL=
SUPABASE_SERVICE_ROLE=

# Optionally add Redis if caching is used
# REDIS_URL=redis://localhost:6379

# ===================================
# External Services
# ===================================

# Priority classification API
PRIORITY_API_URL=http://localhost:8000/predict

# Monitoring and observability
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id
# NEW_RELIC_LICENSE_KEY=your-new-relic-key

# Email service (optional)
# SENDGRID_API_KEY=your-sendgrid-key
# SMTP_HOST=smtp.example.com
# SMTP_PORT=587
# SMTP_USER=your-email@example.com
# SMTP_PASS=your-password

# ===================================
# Performance and Scaling
# ===================================

# Maximum concurrent requests
MAX_CONCURRENT_REQUESTS=100

# Request timeout in milliseconds
REQUEST_TIMEOUT=30000

# Memory limit for the process (in MB)
MEMORY_LIMIT=512

# Enable clustering (use CPU count or specific number)
CLUSTER_WORKERS=auto

# ===================================
# Development Tools
# ===================================

# Hot reload in development
HOT_RELOAD=true

# Enable development-only features
DEV_FEATURES=true

# Mock external services in development
MOCK_EXTERNAL_APIS=false

# ===================================
# Initialization Flow
# ===================================

# Run INIT flow when the tool starts (true/false)
INIT_ON_START=true

# Path to the JSON file with initial input
INIT_JSON_PATH=./input.json

# Require user confirmation in console (true/false)
INTERACTIVE_DECIDE=true

# Default decision if not interactive (accept/reject)
INIT_DECISION=accept